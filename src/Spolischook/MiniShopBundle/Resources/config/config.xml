<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:doctrine="http://symfony.com/schema/dic/doctrine">

    <services>
        <service id="spolischook.mini_shop.order_subscriber" class="Spolischook\MiniShopBundle\EventListener\OrderSubscriber">
            <argument type="string">%secret%</argument>
            <tag name="doctrine.event_subscriber" connection="default" />
        </service>

        <service id="spolischook.mini_shop.product_transfer_subscriber" class="Spolischook\MiniShopBundle\EventListener\ProductTransferSubscriber">
            <tag name="doctrine.event_subscriber" connection="default" />
        </service>

        <service id="spolischook.mini_shop.product_sale_subscriber" class="Spolischook\MiniShopBundle\EventListener\ProductSaleSubscriber">
            <tag name="doctrine.event_subscriber" connection="default" />
        </service>

        <service id="spolischook.mini_shop.money_transfer_subscriber" class="Spolischook\MiniShopBundle\EventListener\MoneyTransferSubscriber">
            <tag name="doctrine.event_subscriber" connection="default" />
        </service>

        <service id="spolischook.mini_shop.shop_extension" class="Spolischook\MiniShopBundle\Twig\ShopExtension">
            <tag name="twig.extension" />
            <argument type="service" id="router" />
        </service>

        <service id="spolischook.mini_shop.validator.product_enough_quantity" class="Spolischook\MiniShopBundle\Validator\Constraints\ProductEnoughQuantityValidator">
            <argument type="service" id="spolischook.mini_shop.repository.store_repository" />
            <tag name="validator.constraint_validator" alias="product_enough_quantity" />
        </service>

        <service id="spolischook.mini_shop.repository.store_repository"
                 class="Spolischook\MiniShopBundle\Repository\StoreRepository"
                 factory-service="doctrine.orm.entity_manager"
                 factory-method="getRepository">
            <argument>MiniShopBundle:Store</argument>
        </service>
    </services>
</container>
